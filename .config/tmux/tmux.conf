# Mouse support
set-option -g mouse on

# Set scroll speed to 1 line per scroll
bind-key -T copy-mode WheelUpPane select-pane \; send-keys -X -N 1 scroll-up
bind-key -T copy-mode WheelDownPane select-pane \; send-keys -X -N 1 scroll-down
bind-key -T copy-mode-vi WheelUpPane select-pane \; send-keys -X -N 1 scroll-up
bind-key -T copy-mode-vi WheelDownPane select-pane \; send-keys -X -N 1 scroll-down

# Don't rename windows automatically
set-option -g allow-rename off

set -g status-position top
set -g status-style bg=default,fg=white
set -g status-left ""
set -g status-right "#[fg=#7CB342] #(echo '#{pane_current_path}' | sed 's#$HOME#~#') "
set -g status-right-length 100

# Add visual gap with pane border
set -g pane-border-status top
set -g pane-border-format ""
set -g pane-border-style fg=#333333
set -g pane-active-border-style fg=#333333

# Tab/Window styling
setw -g window-status-style fg=silver,bg=default
setw -g window-status-current-style fg=default,bg=#c44307,bold
setw -g window-status-format " #I #W "
setw -g window-status-current-format " #I #W "

# Auto-create 4 default windows on new session
set-hook -g after-new-session 'rename-window ide; new-window -n main; split-window -v -c "#{pane_current_path}"; new-window -n term; split-window -v -c "#{pane_current_path}"; new-window -n aux; split-window -v -c "#{pane_current_path}"; select-window -t 0'

# Keybindings
# Seamless navigation between Neovim and tmux (requires @pane-is-vim set by Neovim)
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h' 'previous-window'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j' 'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k' 'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l' 'next-window'
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"
# Resize panes with Ctrl+Alt+hjkl (pass through to Neovim if active)
bind-key -n C-M-h if -F "#{@pane-is-vim}" 'send-keys C-M-h' 'resize-pane -L 5'
bind-key -n C-M-j if -F "#{@pane-is-vim}" 'send-keys C-M-j' 'resize-pane -D 5'
bind-key -n C-M-k if -F "#{@pane-is-vim}" 'send-keys C-M-k' 'resize-pane -U 5'
bind-key -n C-M-l if -F "#{@pane-is-vim}" 'send-keys C-M-l' 'resize-pane -R 5'
bind x kill-pane
bind q kill-server
bind r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded!"

# WezTerm sends EOF (Ctrl+D) when quitting, killing the focused tmux window.
# Intercept it when in shell and detach instead. Still allows Ctrl+D in vim/other programs.
# https://github.com/wezterm/wezterm/issues/4317
bind-key -n C-d if-shell '[ "#{pane_current_command}" = "fish" ]' 'detach' 'send-keys C-d'

