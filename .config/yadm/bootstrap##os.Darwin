#!/bin/bash

update_system() {
	brew update && brew upgrade
	export GPG_TTY=$(tty)
}

update_yadm() {
	yadm remote set-url origin git@github.com:radutomy/dotfiles.git
}

install_packages() {
	brew install wget curl yadm bash-completion jq tree \
		git git-delta expect sshpass unzip just python
}

install_vscode_extensions() {
	local extensions=(
		fill-labs.dependi
		github.copilot
		github.copilot-chat
		mads-hartmann.bash-ide-vscode
		mechatroner.rainbow-csv
		mguellsegarra.highlight-on-copy
		mhutchie.git-graph
		mk12.better-git-line-blame
		ms-dotnettools.csdevkit
		ms-dotnettools.csharp
		ms-dotnettools.vscode-dotnet-runtime
		ms-dotnettools.vscodeintellicode-csharp
		ms-python.black-formatter
		ms-python.debugpy
		ms-python.python
		ms-python.vscode-pylance
		ms-vscode.hexeditor
		ms-vscode.powershell
		oderwat.indent-rainbow
		rust-lang.rust-analyzer
		ryuta46.multi-command
		tamasfe.even-better-toml
		usernamehw.errorlens
		vadimcn.vscode-lldb
		vscode-icons-team.vscode-icons
		vscodevim.vim
	)

	for ext in "${extensions[@]}"; do
		# Skip if the line starts with #
		if [[ ! "$ext" == "#"* ]]; then
			code --install-extension "$ext"
		fi
	done
}

repos() {
	cd ~ || exit
	git clone --branch main git@github.com:radutomy/rustlings.git && cd rustlings
	git config --local user.email "radu@rtom.dev"
	cd ~
}

install_work() {
	cd ~ || exit

	git config --global gpg.format ssh
	git config --global user.signingkey ~/.ssh/id_ed25519
	git config --global tag.gpgsign true
	git config --global commit.gpgsign true

	git clone --branch main git@gitlab.protontech.ch:proton/clients/monorepo.git && cd monorepo
	git config --local user.email "radu.tomuleasa@external.proton.ch"

	$HOME/.cargo/bin/rustup target add aarch64-apple-darwin
	$HOME/.cargo/bin/cargo install --locked dprint

	cd ~
}

install_rust() {
	curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --no-modify-path -y
	$HOME/.cargo/bin/rustup component add rust-analyzer

	$HOME/.cargo/bin/cargo install cargo-binstall

	$HOME/.cargo/bin/rustup target add aarch64-apple-darwin
	$HOME/.cargo/bin/rustup target add wasm32-unknown-unknown
	$HOME/.cargo/bin/rustup target add x86_64-apple-darwin
}

install_neovim() {
	brew install node ripgrep neovim
	nvim --headless "+Lazy! sync" +qa

	# Install LazyGit and LazySQL
	brew install lazygit lazysql
}

install_docker() {
	brew install --cask docker
}

install_dioxus() {
	$HOME/.cargo/bin/cargo install dioxus-cli
}

install_fish() {
	brew install fish fzf fd bat lsd
	curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh # Install zoxide
	fish -c "curl -sL https://raw.githubusercontent.com/jorgebucaran/fisher/main/functions/fisher.fish | source && fisher update"
	# Add fish to allowed shells and set as default
	FISH_PATH=$(which fish)
	if ! grep -q "^${FISH_PATH}$" /etc/shells; then
		echo "$FISH_PATH" | sudo tee -a /etc/shells
	fi
	chsh -s "$FISH_PATH"
}

install_gpt() {
	npm install -g @google/gemini-cli
	npm install -g @anthropic-ai/claude-code
}

cleanup() {
	cd ~
	rm -f .motd_shown
}

update_system
update_yadm
install_packages
install_vscode_extensions
repos
install_rust

if [ "$runtime" = "work" ]; then
	install_work
fi

install_neovim
install_docker
install_gpt
install_fish
cleanup
